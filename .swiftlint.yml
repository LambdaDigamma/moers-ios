# By default, SwiftLint uses a set of sensible default rules you can adjust:
disabled_rules: # rule identifiers turned on by default to exclude from running
  - colon
  - comma
  - control_statement
  - trailing_whitespace
  - trailing_comma
  - switch_case_alignment
  - redundant_string_enum_value
  - closure_parameter_position
  
opt_in_rules: # some rules are turned off by default, so you need to opt-in
  - empty_count # Find all the available rules by running: `swiftlint rules`

# Alternatively, specify all rules explicitly by uncommenting this option:
# only_rules: # delete `disabled_rules` & `opt_in_rules` if using this
#   - empty_parameters
#   - vertical_whitespace

excluded: # paths to ignore during linting. Takes precedence over `included`.
  - Carthage
  - Pods
  - vendor
analyzer_rules: # Rules run by `swiftlint analyze` (experimental)
  - explicit_self

# configurable rules can be customized from this configuration file
# binary rules can set their severity level
force_cast: warning # implicitly
force_try:
  severity: warning # explicitly
# rules that have both warning and error levels, can set just the warning level
# implicitly
line_length: 180
# they can set both implicitly with an array
type_body_length:
  - 300 # warning
  - 400 # error
# or they can set both explicitly
file_length:
  warning: 500
  error: 1200

nesting:
  type_level: 3
  
# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names
type_name:
  min_length: 3 # only warning
  max_length: # warning and error
    warning: 50
    error: 60
  excluded:
    - iPhone # excluded via string
    - API
  allowed_symbols: ["_"] # these are allowed in type names
identifier_name:
  min_length: # only min_length
    warning: 3 # only error
  excluded: # excluded via string array
    - id
    - key
    - api
    - ok
    - vc
    - URL
    - i
    - to
    - vm
    - r
    - g
    - b
    - a
    - x
    - y
    - req
    - API
    - GlobalAPIKey
    - de
    - en
    - ui
reporter: "xcode"
